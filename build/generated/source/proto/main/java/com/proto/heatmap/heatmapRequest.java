// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: heatmap/heatmap.proto

package com.proto.heatmap;

/**
 * Protobuf type {@code heatmap.heatmapRequest}
 */
public  final class heatmapRequest extends
    com.google.protobuf.GeneratedMessageLite<
        heatmapRequest, heatmapRequest.Builder> implements
    // @@protoc_insertion_point(message_implements:heatmap.heatmapRequest)
    heatmapRequestOrBuilder {
  private heatmapRequest() {
    boxes_ = emptyProtobufList();
  }
  public static final int BOXES_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.ProtobufList<com.proto.common.Box> boxes_;
  /**
   * <code>repeated .common.Box boxes = 1;</code>
   */
  @java.lang.Override
  public java.util.List<com.proto.common.Box> getBoxesList() {
    return boxes_;
  }
  /**
   * <code>repeated .common.Box boxes = 1;</code>
   */
  public java.util.List<? extends com.proto.common.BoxOrBuilder> 
      getBoxesOrBuilderList() {
    return boxes_;
  }
  /**
   * <code>repeated .common.Box boxes = 1;</code>
   */
  @java.lang.Override
  public int getBoxesCount() {
    return boxes_.size();
  }
  /**
   * <code>repeated .common.Box boxes = 1;</code>
   */
  @java.lang.Override
  public com.proto.common.Box getBoxes(int index) {
    return boxes_.get(index);
  }
  /**
   * <code>repeated .common.Box boxes = 1;</code>
   */
  public com.proto.common.BoxOrBuilder getBoxesOrBuilder(
      int index) {
    return boxes_.get(index);
  }
  private void ensureBoxesIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.proto.common.Box> tmp = boxes_;
    if (!tmp.isModifiable()) {
      boxes_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .common.Box boxes = 1;</code>
   */
  private void setBoxes(
      int index, com.proto.common.Box value) {
    value.getClass();
  ensureBoxesIsMutable();
    boxes_.set(index, value);
  }
  /**
   * <code>repeated .common.Box boxes = 1;</code>
   */
  private void addBoxes(com.proto.common.Box value) {
    value.getClass();
  ensureBoxesIsMutable();
    boxes_.add(value);
  }
  /**
   * <code>repeated .common.Box boxes = 1;</code>
   */
  private void addBoxes(
      int index, com.proto.common.Box value) {
    value.getClass();
  ensureBoxesIsMutable();
    boxes_.add(index, value);
  }
  /**
   * <code>repeated .common.Box boxes = 1;</code>
   */
  private void addAllBoxes(
      java.lang.Iterable<? extends com.proto.common.Box> values) {
    ensureBoxesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, boxes_);
  }
  /**
   * <code>repeated .common.Box boxes = 1;</code>
   */
  private void clearBoxes() {
    boxes_ = emptyProtobufList();
  }
  /**
   * <code>repeated .common.Box boxes = 1;</code>
   */
  private void removeBoxes(int index) {
    ensureBoxesIsMutable();
    boxes_.remove(index);
  }

  public static final int WIDTH_FIELD_NUMBER = 2;
  private int width_;
  /**
   * <code>int32 width = 2;</code>
   * @return The width.
   */
  @java.lang.Override
  public int getWidth() {
    return width_;
  }
  /**
   * <code>int32 width = 2;</code>
   * @param value The width to set.
   */
  private void setWidth(int value) {
    
    width_ = value;
  }
  /**
   * <code>int32 width = 2;</code>
   */
  private void clearWidth() {
    
    width_ = 0;
  }

  public static final int HEIGHT_FIELD_NUMBER = 3;
  private int height_;
  /**
   * <code>int32 height = 3;</code>
   * @return The height.
   */
  @java.lang.Override
  public int getHeight() {
    return height_;
  }
  /**
   * <code>int32 height = 3;</code>
   * @param value The height to set.
   */
  private void setHeight(int value) {
    
    height_ = value;
  }
  /**
   * <code>int32 height = 3;</code>
   */
  private void clearHeight() {
    
    height_ = 0;
  }

  public static com.proto.heatmap.heatmapRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.proto.heatmap.heatmapRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.proto.heatmap.heatmapRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.proto.heatmap.heatmapRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.proto.heatmap.heatmapRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.proto.heatmap.heatmapRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.proto.heatmap.heatmapRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.proto.heatmap.heatmapRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.proto.heatmap.heatmapRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.proto.heatmap.heatmapRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.proto.heatmap.heatmapRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.proto.heatmap.heatmapRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.proto.heatmap.heatmapRequest prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code heatmap.heatmapRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.proto.heatmap.heatmapRequest, Builder> implements
      // @@protoc_insertion_point(builder_implements:heatmap.heatmapRequest)
      com.proto.heatmap.heatmapRequestOrBuilder {
    // Construct using com.proto.heatmap.heatmapRequest.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>repeated .common.Box boxes = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.proto.common.Box> getBoxesList() {
      return java.util.Collections.unmodifiableList(
          instance.getBoxesList());
    }
    /**
     * <code>repeated .common.Box boxes = 1;</code>
     */
    @java.lang.Override
    public int getBoxesCount() {
      return instance.getBoxesCount();
    }/**
     * <code>repeated .common.Box boxes = 1;</code>
     */
    @java.lang.Override
    public com.proto.common.Box getBoxes(int index) {
      return instance.getBoxes(index);
    }
    /**
     * <code>repeated .common.Box boxes = 1;</code>
     */
    public Builder setBoxes(
        int index, com.proto.common.Box value) {
      copyOnWrite();
      instance.setBoxes(index, value);
      return this;
    }
    /**
     * <code>repeated .common.Box boxes = 1;</code>
     */
    public Builder setBoxes(
        int index, com.proto.common.Box.Builder builderForValue) {
      copyOnWrite();
      instance.setBoxes(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .common.Box boxes = 1;</code>
     */
    public Builder addBoxes(com.proto.common.Box value) {
      copyOnWrite();
      instance.addBoxes(value);
      return this;
    }
    /**
     * <code>repeated .common.Box boxes = 1;</code>
     */
    public Builder addBoxes(
        int index, com.proto.common.Box value) {
      copyOnWrite();
      instance.addBoxes(index, value);
      return this;
    }
    /**
     * <code>repeated .common.Box boxes = 1;</code>
     */
    public Builder addBoxes(
        com.proto.common.Box.Builder builderForValue) {
      copyOnWrite();
      instance.addBoxes(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .common.Box boxes = 1;</code>
     */
    public Builder addBoxes(
        int index, com.proto.common.Box.Builder builderForValue) {
      copyOnWrite();
      instance.addBoxes(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .common.Box boxes = 1;</code>
     */
    public Builder addAllBoxes(
        java.lang.Iterable<? extends com.proto.common.Box> values) {
      copyOnWrite();
      instance.addAllBoxes(values);
      return this;
    }
    /**
     * <code>repeated .common.Box boxes = 1;</code>
     */
    public Builder clearBoxes() {
      copyOnWrite();
      instance.clearBoxes();
      return this;
    }
    /**
     * <code>repeated .common.Box boxes = 1;</code>
     */
    public Builder removeBoxes(int index) {
      copyOnWrite();
      instance.removeBoxes(index);
      return this;
    }

    /**
     * <code>int32 width = 2;</code>
     * @return The width.
     */
    @java.lang.Override
    public int getWidth() {
      return instance.getWidth();
    }
    /**
     * <code>int32 width = 2;</code>
     * @param value The width to set.
     * @return This builder for chaining.
     */
    public Builder setWidth(int value) {
      copyOnWrite();
      instance.setWidth(value);
      return this;
    }
    /**
     * <code>int32 width = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearWidth() {
      copyOnWrite();
      instance.clearWidth();
      return this;
    }

    /**
     * <code>int32 height = 3;</code>
     * @return The height.
     */
    @java.lang.Override
    public int getHeight() {
      return instance.getHeight();
    }
    /**
     * <code>int32 height = 3;</code>
     * @param value The height to set.
     * @return This builder for chaining.
     */
    public Builder setHeight(int value) {
      copyOnWrite();
      instance.setHeight(value);
      return this;
    }
    /**
     * <code>int32 height = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearHeight() {
      copyOnWrite();
      instance.clearHeight();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:heatmap.heatmapRequest)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.proto.heatmap.heatmapRequest();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "boxes_",
            com.proto.common.Box.class,
            "width_",
            "height_",
          };
          java.lang.String info =
              "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0001\u0000\u0001\u001b\u0002\u0004" +
              "\u0003\u0004";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.proto.heatmap.heatmapRequest> parser = PARSER;
        if (parser == null) {
          synchronized (com.proto.heatmap.heatmapRequest.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.proto.heatmap.heatmapRequest>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:heatmap.heatmapRequest)
  private static final com.proto.heatmap.heatmapRequest DEFAULT_INSTANCE;
  static {
    heatmapRequest defaultInstance = new heatmapRequest();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      heatmapRequest.class, defaultInstance);
  }

  public static com.proto.heatmap.heatmapRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<heatmapRequest> PARSER;

  public static com.google.protobuf.Parser<heatmapRequest> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

